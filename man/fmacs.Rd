% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fmacs.R
\name{fmacs}
\alias{fmacs}
\alias{fmacs_ordered}
\title{Compute fMACS effect size for two or more groups.}
\usage{
fmacs(
  intercepts,
  loadings = NULL,
  pooled_item_sd,
  num_obs = NULL,
  weights = 0 * intercepts + 1,
  group_factor = NULL,
  contrast = contr.sum(nrow(intercepts)),
  latent_mean = 0,
  latent_sd = 1
)

fmacs_ordered(
  thresholds,
  loadings,
  thetas = 1,
  num_obs = NULL,
  weights = 0 * loadings + 1,
  group_factor = NULL,
  contrast = contr.sum(nrow(thresholds)),
  link = c("probit", "logit"),
  pooled_item_sd = NULL,
  latent_mean = 0,
  latent_sd = 1
)
}
\arguments{
\item{intercepts}{A \eqn{G \times p} matrix of measurement intercepts.}

\item{loadings}{A \eqn{G \times p} matrix of factor loadings, where p
is the number of items and G is the number of groups.}

\item{pooled_item_sd}{A numeric vector of length p of the pooled standard
deviation (SD) of the items across groups.}

\item{num_obs}{A vector of length \eqn{G} of sample sizes. If not
\code{NULL}, the weights will be proportional to sample sizes, assuming
the same weights across items.}

\item{weights}{A \eqn{G \times p} matrix of weights. Default assumes
equal weights across groups.}

\item{group_factor}{A vector of length \eqn{G} indicating grouping for
contrast. For example, \code{c(1, 1, 2)} means contrasting Group 1 & 2 vs.
Group 3. The default is to not combine any groups, meaning the
omnibus effect is computed.}

\item{contrast}{A \eqn{p \times k} contrast matrix where
\code{colSums(contrast)} = 0. Default is \code{contr.sum(p)} if \code{group_factor} is
not specified.}

\item{latent_mean}{latent factor mean for the reference group. Default to 0.}

\item{latent_sd}{latent factor SD for the reference group. Default to 1.}

\item{thresholds}{A matrix with G rows for measurement thresholds. The
matrix must have column names indicating to which item index each column
corresponds.}

\item{thetas}{Not currently used.}

\item{link}{Link function for the model (probit or logit).}
}
\value{
A 1 x p matrix of fMACS effect size.
}
\description{
\code{fmacs} returns the fMACS effect size statistics given a set of loadings
and intercepts.
}
\details{
The \eqn{f_\text{MACS}} effect size is defined as
\deqn{f_{\text{MACS}, i} = \frac{1}{\mathit{SD}_{iP}}
  \sqrt{\int [(\nu_{ij} - \bar{\nu}_j) +
              (\lambda_{ij} - \bar{\lambda}_j) \eta]^2 f(\eta) d \eta}}
where \eqn{\lambda} is the loading and \eqn{\nu} is the intercept,
and j indexes group. The effect size reflects the square root of
the ratio between the variance in observed item score due to
measurement noninvariance and the variance of the observed item scores.
\eqn{f_\text{MACS}} is analogous to the Cohen's f effect size. When there
are two groups with equal sample sizes, \eqn{f_\text{MACS}} =
\eqn{f_\text{MACS}} / 2
}
\examples{
lambda <- rbind(c(.7, .8, .7, .9),
                c(.7, .8, .7, .8),
                c(.8, .7, .7, .5))
nu <- rbind(c(0, .5, 0, 1),
            c(0, .2, 0, 1.1),
            c(0, .3, 0, 1.2))
fmacs(lambda,
      loadings = nu,
      pooled_item_sd = c(1, 1, 1, 1),
      latent_mean = 0,
      latent_sd = 1)
# With contrast (Group 1 & 2 vs. Group 3)
fmacs(lambda,
      loadings = nu,
      pooled_item_sd = c(1, 1, 1, 1),
      group_factor = c(1, 1, 2),
      latent_mean = 0,
      latent_sd = 1)
# Thresholds
lambda <- rbind(c(.8, .5, .7, .5),
                c(.8, .5, .4, .6),
                c(.8, .7, .7, .5))
tau <- rbind(c(-0.5, 0, 1, -0.3, 0.1, 0.5, -0.5, 1.5),
             c(-0.5, 0, 1, -0.5, 0.3, 0.5, -1, 1.5),
             c(-0.5, 0, 1, -0.5, 0.3, 0.5, -1, 0.5))
# three thresholds for items 1 and 2; one threshold for items 3 and 4
colnames(tau) <- c(1, 1, 1, 2, 2, 2, 3, 4)
fmacs_ordered(tau,
              loadings = lambda,
              pooled_item_sd = c(1, 1, 1, 1),
              latent_mean = 0,
              latent_sd = 1)
# With contrast (Group 1 & 2 vs. Group 3)
fmacs_ordered(tau,
              loadings = lambda,
              pooled_item_sd = c(1, 1, 1, 1),
              group_factor = c(1, 2, 1),
              latent_mean = 0,
              latent_sd = 1)
}
